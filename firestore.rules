rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Admin collection
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if false; // Only manually add admins for security
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null && userId == request.auth.uid;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Startups collection
    match /startups/{startupId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin() || isOwner(resource.data.userId);
      allow delete: if isAdmin();
    }
  }
}
